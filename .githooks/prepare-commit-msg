#!/bin/bash

# Ignore rules when rebasing...
BRANCH_NAME=$(git branch | grep '*' | sed 's/* //')
if [[ "$BRANCH_NAME" =~ '^\(no branch' ]] || [ $2 == 'commit' ]
then
  exit 0
fi

COMMIT_TMP_FILE_NAME=$1
COMMIT_MSG=$(cat $COMMIT_TMP_FILE_NAME)
ERROR_MSG="Commit message must start with a capital letter and be at least 10 chars long"
REGEX="^[A-Z].{9}.*"
if [[ ! $COMMIT_MSG =~ $REGEX ]]; then
 echo "Bad commit \"$COMMIT_MSG\", must be like \"Version x.x: <message>\"."
 exit 1
fi

# Append the commit message in the right place
sed -iE "s/\n\n#\(?! Latest\)/$COMMIT_MSG \n\n#"/ docs/changelog.md
# Add latest title if it's not there
if ! grep "# Latest" docs/changelog.md; then
    echo "# Latest" | cat - docs/changelog.md > temp  && mv temp docs/changelog.md
fi
git commit --amend -C HEAD --no-verify