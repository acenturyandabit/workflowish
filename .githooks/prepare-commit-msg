#!/bin/bash
[ ! -z $VERBUMP ] && exit 0;
# Ignore rules when rebasing...
BRANCH_NAME=$(git branch | grep '*' | sed 's/* //')
if [[ "$BRANCH_NAME" =~ ^\(no\ branch ]] || [ $2 == 'commit' ]
then
  exit 0
fi

COMMIT_TMP_FILE_NAME=$1
COMMIT_MSG=$(cat $COMMIT_TMP_FILE_NAME)
ERROR_MSG="commit message must start with a capital letter and be at least 10 chars long"
REGEX="^[A-Z].{9}.*"
if [[ ! $COMMIT_MSG =~ $REGEX ]]; then
 echo "Bad commit \"$COMMIT_MSG\", $ERROR_MSG"
 exit 1
fi


if (cat docs/changelog.md | tr '\n' '%' \
        | grep -E "^# Version" > /dev/null) ; then
    echo -e "# Latest \n"| cat - docs/changelog.md > docs/changelog.tmp
    mv docs/changelog.tmp docs/changelog.md 
fi


if ! (cat docs/changelog.md | tr -d '\r' | tr '\n' '%' \
        | grep -E "^# Latest[^#]+?(%%#)" > /dev/null) ; then
    cat << EOM 
Warning: changelog file format not correct.

The first line should be "# Latest" and there should be two newlines
before the next version header.
EOM
    exit 1
fi

## Append the commit message in the right place
# tr is used to convert newlines to feeds for multiline sed
cat docs/changelog.md \
    | tr -d '\r' \
    | tr '\n' '\f' \
    | sed -E "s/\\f\\f# V/\\f- $COMMIT_MSG\\f\\f# V/" \
    | tr '\f' '\n' \
    > docs/changelog.tmp && mv docs/changelog.tmp docs/changelog.md 